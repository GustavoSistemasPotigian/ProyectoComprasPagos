/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modelos;

import BaseDeDatos.ConexionMySQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class PlanDeDescuentoFijo extends javax.swing.JFrame {

    /**
     * Creates new form PlanDeDescuento
     */
    DefaultTableModel modelo;
    
    public PlanDeDescuentoFijo() {
        initComponents();
        habilitar();
        inhabilitar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlbProveedor = new javax.swing.JLabel();
        txtIdProveedor = new javax.swing.JTextField();
        jlbImporte = new javax.swing.JLabel();
        txtImporte = new javax.swing.JTextField();
        rbIVA21 = new javax.swing.JRadioButton();
        rbIVA10 = new javax.swing.JRadioButton();
        jlbCuotas = new javax.swing.JLabel();
        txtCuotas = new javax.swing.JTextField();
        jlbComprador = new javax.swing.JLabel();
        txtComprador = new javax.swing.JTextField();
        jlbSector = new javax.swing.JLabel();
        txtSector = new javax.swing.JTextField();
        jlbMotivoSNC = new javax.swing.JLabel();
        txtMotivoSNC = new javax.swing.JTextField();
        jlbDescuento = new javax.swing.JLabel();
        txtDescDescuento = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        jlbObsProveedor = new javax.swing.JLabel();
        txtObsProveedor = new javax.swing.JTextField();
        jlbObsComprador = new javax.swing.JLabel();
        txtObsComprador = new javax.swing.JTextField();
        btnNuevoPlan = new javax.swing.JButton();
        btnConsultasPlan = new javax.swing.JButton();
        jcomProveedor = new javax.swing.JComboBox<>();
        jcomComprador = new javax.swing.JComboBox<>();
        jcomSector = new javax.swing.JComboBox<>();
        jcomMotivo = new javax.swing.JComboBox<>();
        jlbFechaDebito = new javax.swing.JLabel();
        txtFechaDebito = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCuotasVisual = new javax.swing.JTable();
        btnConfirmar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtCantCopias = new javax.swing.JTextField();
        jlbCantidadDeCopias = new javax.swing.JLabel();
        jlbCuota = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PLAN IMPORTE FIJO- Alta"));

        jlbProveedor.setBackground(new java.awt.Color(51, 204, 0));
        jlbProveedor.setText("Proveedor:");

        txtIdProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdProveedorActionPerformed(evt);
            }
        });

        jlbImporte.setText("Importe");

        txtImporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImporteActionPerformed(evt);
            }
        });

        rbIVA21.setText("IVA 21%");
        rbIVA21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIVA21ActionPerformed(evt);
            }
        });

        rbIVA10.setText("IVA 10.5 %");
        rbIVA10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIVA10ActionPerformed(evt);
            }
        });

        jlbCuotas.setText("Cuotas: ");

        jlbComprador.setText("Comprador: ");

        txtComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompradorActionPerformed(evt);
            }
        });

        jlbSector.setText("Sector: ");

        txtSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSectorActionPerformed(evt);
            }
        });

        jlbMotivoSNC.setText("Motivo SNC:");

        txtMotivoSNC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotivoSNCActionPerformed(evt);
            }
        });

        jlbDescuento.setText("Descuento: ");

        txtDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescuentoActionPerformed(evt);
            }
        });

        jlbObsProveedor.setText("Obs. Proveedor:");

        txtObsProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObsProveedorActionPerformed(evt);
            }
        });

        jlbObsComprador.setText("Obs. Comprador: ");

        btnNuevoPlan.setText("Nuevo Plan");
        btnNuevoPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPlanActionPerformed(evt);
            }
        });

        btnConsultasPlan.setText("Consultas");
        btnConsultasPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultasPlanActionPerformed(evt);
            }
        });

        jcomProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomProveedorActionPerformed(evt);
            }
        });

        jcomComprador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomCompradorActionPerformed(evt);
            }
        });

        jcomSector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomSectorActionPerformed(evt);
            }
        });

        jcomMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcomMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomMotivoActionPerformed(evt);
            }
        });

        jlbFechaDebito.setText("Fecha Debito: ");

        txtFechaDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaDebitoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jlbImporte)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlbSector)
                                            .addComponent(jlbCuotas)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jlbProveedor)))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcomProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jlbComprador)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcomComprador, 0, 299, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jlbFechaDebito)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFechaDebito, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rbIVA21)
                                        .addGap(10, 10, 10)
                                        .addComponent(rbIVA10)
                                        .addGap(26, 26, 26))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSector, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcomSector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbDescuento)
                                    .addComponent(jlbMotivoSNC))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcomMotivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDescDescuento)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbObsComprador)
                                    .addComponent(jlbObsProveedor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtObsProveedor)
                                    .addComponent(txtObsComprador))))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultasPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbProveedor, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcomProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlbImporte)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbIVA21)
                        .addComponent(rbIVA10)
                        .addComponent(jlbFechaDebito)
                        .addComponent(txtFechaDebito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCuotas)
                    .addComponent(txtCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbComprador)
                    .addComponent(txtComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlbSector)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcomSector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbMotivoSNC)
                    .addComponent(txtMotivoSNC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbDescuento)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObsProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbObsProveedor))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbObsComprador)
                    .addComponent(txtObsComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblCuotasVisual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblCuotasVisual);

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtCantCopias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantCopiasActionPerformed(evt);
            }
        });

        jlbCantidadDeCopias.setText("Cantidad de Copias");

        jlbCuota.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlbCuota.setText("Cuota:");

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnConfirmar)
                                .addGap(18, 18, 18)
                                .addComponent(jlbCantidadDeCopias)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantCopias, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbCuota)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCalcular)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCuota)
                    .addComponent(btnCalcular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbCantidadDeCopias)
                    .addComponent(txtCantCopias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(294, 294, 294))
        );

        jPanel1.getAccessibleContext().setAccessibleName("PLAN IMPORTE FIJO");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdProveedorActionPerformed
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", idProv="";
        idProv= txtIdProveedor.getText();
        
        sSQL= "select pr.razon_social as razon from proveedor as pr where pr.idproveedor LIKE '%"+idProv+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
             if (rs.next() == false)
            {
                String mensaje="el proveedor no existe";
                JOptionPane.showMessageDialog(null, mensaje);
            
            }
             else 
             {
                this.jcomProveedor.removeAllItems();
                this.jcomProveedor.addItem(rs.getString("razon"));                 
              }          
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }//GEN-LAST:event_txtIdProveedorActionPerformed

    private void txtImporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImporteActionPerformed

    private void txtSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSectorActionPerformed
         ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", idSec="";
        idSec= txtSector.getText();
        
        sSQL= "select descripcion from sector where idsector LIKE '%"+idSec+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
             if (rs.next() == false)
            {
                String mensaje="el Sector no existe";
                JOptionPane.showMessageDialog(null, mensaje);
            
            }
             else 
             {
                this.jcomSector.removeAllItems();
                this.jcomSector.addItem(rs.getString("descripcion"));                 
              }          
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }//GEN-LAST:event_txtSectorActionPerformed

    private void txtMotivoSNCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotivoSNCActionPerformed
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", idMotiv="";
        idMotiv= txtMotivoSNC.getText();
        
        sSQL= "select descripcion from motivo_snc where idmotivo_snc LIKE '%"+idMotiv+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
             if (rs.next() == false)
            {
                String mensaje="El Motivo no existe";
                JOptionPane.showMessageDialog(null, mensaje);
            
            }
             else 
             {
                this.jcomMotivo.removeAllItems();
                this.jcomMotivo.addItem(rs.getString("descripcion"));                 
              }          
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }//GEN-LAST:event_txtMotivoSNCActionPerformed

    private void txtDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescuentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescuentoActionPerformed

    private void txtObsProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObsProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObsProveedorActionPerformed

    private void txtCantCopiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantCopiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantCopiasActionPerformed

    private void rbIVA21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIVA21ActionPerformed
        ///CONDICIONAL PARA QUE BLOQUEE EL BOTÓN DE IVA10%
        
        if (rbIVA10.isEnabled()== false){
        rbIVA10.setEnabled(true);}
        else{
        rbIVA10.setEnabled(false);
                
        }
        
    }//GEN-LAST:event_rbIVA21ActionPerformed

    private void rbIVA10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIVA10ActionPerformed
        ///CONDICIONAL PARA QUE BLOQUEE EL BOTÓN DE IVA21% 
      
        if (rbIVA21.isEnabled()== false){
            rbIVA21.setEnabled(true);
             }
        else {
        rbIVA21.setEnabled(false);
        }
    }//GEN-LAST:event_rbIVA10ActionPerformed

    private void jcomProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomProveedorActionPerformed
         
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", razon="";
        razon=(String) jcomProveedor.getSelectedItem();
        
        sSQL= "select pr.idproveedor as id from proveedor as pr where pr.razon_social LIKE '%"+razon+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtIdProveedor.setText(rs.getString("id"));
        
            }           
           
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
              
    }//GEN-LAST:event_jcomProveedorActionPerformed

    private void jcomClaseProveedorMenu()
    {
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "SELECT razon_social FROM proveedor";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomProveedor.addItem(rs.getString("razon_social"));
                
            }            
                        
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
        
    
    }
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // BOTÓN DE SALIR
        PlanDeDescuentoFijo.this.dispose();       
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnNuevoPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPlanActionPerformed
        ///// HABILITA TODOS LOS PUNTOS NUEVAMENTE
        habilitar();

    }//GEN-LAST:event_btnNuevoPlanActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ///PARA INHABILITAR TODOS LOS CAMPOS.-
        inhabilitar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jcomCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomCompradorActionPerformed
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", comprador="";
        comprador=(String) jcomComprador.getSelectedItem();
        
        sSQL= "select usr.idusuario as id from usuario as usr where CONCAT (usr.apellido,\" \",usr.nombre) LIKE '%"+comprador+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtComprador.setText(rs.getString("id"));
                
                
            }           
           
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }   
    }//GEN-LAST:event_jcomCompradorActionPerformed

    private void jcomSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomSectorActionPerformed
       ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", secDescr="";
        secDescr=(String) jcomSector.getSelectedItem();
        
        sSQL= "select idSector as id from sector where descripcion LIKE '%"+secDescr+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtSector.setText(rs.getString("id"));
            }           
           
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }   
    }//GEN-LAST:event_jcomSectorActionPerformed

    private void jcomMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomMotivoActionPerformed
        ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", motivo="";
        motivo=(String) jcomMotivo.getSelectedItem();
        
        sSQL= "select idmotivo_snc as id from motivo_snc where descripcion LIKE '%"+motivo+"%'";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                txtMotivoSNC.setText(rs.getString("id"));
            }           
           
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }   
    }//GEN-LAST:event_jcomMotivoActionPerformed

    private void txtCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompradorActionPerformed
         ///realizamos la conexion con la bdd.
        
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="", idComp="";
        idComp= txtComprador.getText();
        
        sSQL= "select concat (apellido,\" \", nombre) as comprador from usuario where idusuario LIKE '%"+idComp+"%'";
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
             if (rs.next() == false)
            {
                String mensaje="el Comprador no existe";
                JOptionPane.showMessageDialog(null, mensaje);
            
            }
             else 
             {
                this.jcomComprador.removeAllItems();
                this.jcomComprador.addItem(rs.getString("comprador"));                 
              }          
             }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } 
    }//GEN-LAST:event_txtCompradorActionPerformed
    ////CLASE PARA CALCULAR QUE TIPO DE IVA APRETO
    String getIVA(){
       String iva="";
         if (rbIVA10.isSelected()== true){
             iva="3";}
        else{
             if (rbIVA21.isSelected()== true)
             { iva="2";}
             else{
                 iva="1";
             }
        }
        
        return iva;
    }
    String calcularIVA()
    {
        String monto="";
        double resultado=0;
        if (getIVA()=="2"){
            monto= txtImporte.getText();
            resultado= Double.parseDouble(monto);
            resultado= (resultado*0.21);
            monto=Double.toString(resultado);
        }
        else {
            if (getIVA()=="3"){
                monto= txtImporte.getText();
                resultado= Double.parseDouble(monto);
                resultado= (resultado*0.105);
                monto=Double.toString(resultado);
            }
            else{
                if (getIVA()=="1"){
                     monto= txtImporte.getText();
                     resultado= Double.parseDouble(monto);
                     resultado= (resultado*0.0);
                     monto=Double.toString(resultado);
                
                }
               }
            
            
            }
            
        
        
    return monto;}
    
    
    String accion="Insertar";
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
       //conexión a la bdd
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(date);
        
        ///STRING A UTILIZAR
        String idProve, tipoDePlan,fechaActual,importe, cuotas, idComprador,idSector;
        String motivoSNC,descuento, descDescripcion, obsComprador, obsProveedor,tipoIVA, cantCopias;
        String sSQL="";
        String mensaje;
       ///campos a cargar
        idProve=txtIdProveedor.getText();
        tipoDePlan="FIJO";
        fechaActual= fecha;
        importe=txtImporte.getText();
        cuotas=txtCuotas.getText();
        idComprador= txtComprador.getText();
        idSector=txtSector.getText();
        motivoSNC= txtMotivoSNC.getText();
        descuento=txtDescuento.getText();
        descDescripcion=txtDescDescuento.getText();
        obsProveedor= txtObsProveedor.getText();
        obsComprador=txtObsComprador.getText();
        tipoIVA=getIVA();
        cantCopias=txtCantCopias.getText ();
        
        
        ///creamos la consulta sql
        if (accion.equals("Insertar"))
        {
            sSQL="INSERT INTO plan_descuento (Proveedor_idproveedor, tipo_plan,fechaActual, importe,"
                    + " cuotas, Usuario_idusuario,Sector_idsector,Motivo_SNC_idMotivo_SNC, descuento,"
                    + "descuento_descripcion,obs_Proveedor, obs_Comprador, tipo_IVA_idtipo_IVA,cant_copias ) "+
                "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
           mensaje="Operación Satisfactoria";
        }
        /*
        else if (accion.equals("Modificar"))
        {
            sSQL="UPDATE articulo " +
                 "SET idArticulo= ?," +
                 "descripcion= ?, "+
                 "unidad_de_venta= ?, " +
                 "fecha_ingreso_inicial= ?, " +
                 "precio_costo= ? ," +
                 "precio_vigente= ? ," +
                 "margen=?," +   
                 "proveedor_idproveedor= ? , "+
                 "cantidad_total= ? " +  
                 "WHERE idArticulo= " + id_actualizar;
            mensaje="Operación Satisfactoría";
        }
        */
        
        try 
        {
            PreparedStatement pst= cn.prepareStatement(sSQL);
            pst.setString(1, idProve );
            pst.setString(2, tipoDePlan);
            pst.setString(3, fechaActual);
            pst.setString(4, importe);
            pst.setString(5, cuotas);
            pst.setString(6, idComprador);
            pst.setString(7, idSector);
            pst.setString(8, motivoSNC);
            pst.setString(9, descuento);
            pst.setString(10,descDescripcion);
            pst.setString(11,obsProveedor);
            pst.setString(12,obsComprador);
            pst.setString(13,tipoIVA);
            pst.setString(14, cantCopias);
            int n = pst.executeUpdate();
            
            if (n>0)
            {    
                mensaje="Operación Satisfactoria";
                JOptionPane.showMessageDialog(null, mensaje);
               // CargarTablaCuotas("");
                habilitar();//habilita los campos para la carga de datos
                inhabilitar();
            }
            
            
            
        } 
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        cargarTablaCuotas();
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void txtFechaDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaDebitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaDebitoActionPerformed

    private void btnConsultasPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultasPlanActionPerformed
        ConsultaPlanes ventanaConsulta= new ConsultaPlanes();
        ventanaConsulta.setVisible(true);
    }//GEN-LAST:event_btnConsultasPlanActionPerformed
    
    private void jcomClaseMotivoMenu()
    {
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select descripcion from motivo_snc";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomMotivo.addItem(rs.getString("descripcion")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }
    
    private void jcomClaseSectorMenu()
      {
        
        ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select descripcion from sector";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomSector.addItem(rs.getString("descripcion")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }      
      }
    private void jcomClaseCompradorMenu()
    {
       ///realizamos la conexion con la bdd.
        ConexionMySQL mysql= new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
       ///ingresamos la consulta
        String sSQL="";
        
        sSQL= "select concat (apellido,\" \", nombre) as comprador from usuario";
        
        try 
        {
            Statement st= cn.createStatement();
            ResultSet rs= st.executeQuery(sSQL);
            
            while (rs.next())///recorre cada valor de la consulta y la guarda en las variables.
            {
                this.jcomComprador.addItem(rs.getString("comprador")); 
            }               
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }      
    
    }
    
    private void cargarTablaCuotas()
    {
        String sSQL="";
       
        ///configuramos la tabla.
        String [] titulos= {"Cuota","IVA","Fecha de Debito"};
        String [] registro= new String[3];
        modelo = new DefaultTableModel(null,titulos);
        ///realizamos la conexion con la bdd.
        //ConexionMySQL mysql= new ConexionMySQL();
        //Connection cn= mysql.Conectar();
        ///ingresamos la consulta
        ///FECHA ACTUAL
        java.util.Date date = new java.util.Date();
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        String fecha = sdf.format(date);
        
        String importe= "";
        importe= txtImporte.getText();
        System.out.println(importe);
            //  Statement st= cn.createStatement();
            //ResultSet rs= st.executeQuery(sSQL);
            
            //while (rs.next())
           // {
           if (importe == " "){
                JOptionPane.showMessageDialog(null, "Ingrese Importe");
               
           }
           else {
                registro[0]= importe;
                registro[1]=calcularIVA();
                registro[2]=fecha;
                
                modelo.addRow(registro);
           } 
            // }
            tblCuotasVisual.setModel(modelo);
                        
     
        
    
    
    }
    
    
    /////////////////////////////////////////////////////////////////////////////
    //////////////CLASES PARA HABILITAR E INHABILITAR LOS MENUS//////////////////
    /////////////////////////////////////////////////////////////////////////////
    
    void habilitar()
    {
   //habilita cada opción
    txtIdProveedor.setEnabled(true);
    jcomProveedor.setEnabled(true);
    jlbProveedor.setEnabled(true);
    txtImporte.setEnabled(true);
    jlbImporte.setEnabled(true);
    rbIVA21.setEnabled(true);
    rbIVA21.setSelected(false);
    rbIVA10.setEnabled(true);
    rbIVA10.setSelected(false);
    txtCuotas.setEnabled(true);
    jlbCuotas.setEnabled(true);
    txtComprador.setEnabled(true);
    jcomComprador.setEnabled(true);
    jlbComprador.setEnabled(true);
    txtIdProveedor.setEnabled(true);
    jcomProveedor.setEnabled(true);
    jlbProveedor.setEnabled(true);
    txtSector.setEnabled(true);
    jcomSector.setEnabled(true);
    jlbSector.setEnabled(true);
    txtMotivoSNC.setEnabled(true);
    jcomMotivo.setEnabled(true);
    jlbMotivoSNC.setEnabled(true);
    txtDescuento.setEnabled(true);
    jlbDescuento.setEnabled(true);
    txtDescDescuento.setEnabled(true);
    txtObsProveedor.setEnabled(true);
    jlbObsProveedor.setEnabled(true);
    txtObsComprador.setEnabled(true);
    jlbObsComprador.setEnabled(true);
    txtCantCopias.setEnabled(true);
    jlbCantidadDeCopias.setEnabled(true);
    btnConfirmar.setEnabled(true);
    btnCancelar.setEnabled(true);
    btnCalcular.setEnabled(true);
    jlbCuotas.setEnabled(true);
    txtIdProveedor.requestFocus();///posiciona el cursor
    
    
    
     //vacia los campos en ""
    txtIdProveedor.setText("");   
    txtImporte.setText("");
    txtCuotas.setText("");
    txtComprador.setText("");
    txtIdProveedor.setText("");
    txtSector.setText("");
    txtMotivoSNC.setText("");
    txtDescuento.setText("");
    txtDescDescuento.setText("");
    txtObsProveedor.setText("");
    txtObsComprador.setText("");
    txtCantCopias.setText("");
    eliminarTablaCuotas();
    
    this.jcomProveedor.removeAllItems();
    this.jcomComprador.removeAllItems();
    this.jcomMotivo.removeAllItems();
    this.jcomSector.removeAllItems();
    

    
    jcomClaseProveedorMenu();
    jcomClaseCompradorMenu();
    jcomClaseSectorMenu();
    jcomClaseMotivoMenu();
    
    
    }
    ///metodo para cancelar la carga de datos
   
    void inhabilitar(){
    //deshabilita cada opción
    txtIdProveedor.setEnabled(false);
    jcomProveedor.setEnabled(false);
    jlbProveedor.setEnabled(false);
    txtImporte.setEnabled(false);
    jlbImporte.setEnabled(false);
    rbIVA21.setEnabled(false);
    rbIVA10.setEnabled(false);
    txtCuotas.setEnabled(false);
    jlbCuotas.setEnabled(false);
    txtComprador.setEnabled(false);
    jcomComprador.setEnabled(false);
    jlbComprador.setEnabled(false);
    txtSector.setEnabled(false);
    jcomSector.setEnabled(false);
    jlbSector.setEnabled(false);
    txtMotivoSNC.setEnabled(false);
    jcomMotivo.setEnabled(false);
    jlbMotivoSNC.setEnabled(false);
    txtDescuento.setEnabled(false);
    jlbDescuento.setEnabled(false);
    txtDescDescuento.setEnabled(false);
    txtObsProveedor.setEnabled(false);
    jlbObsProveedor.setEnabled(false);
    txtObsComprador.setEnabled(false);
    jlbObsComprador.setEnabled(false);
    txtCantCopias.setEnabled(false);
    jlbCantidadDeCopias.setEnabled(false);
    btnConfirmar.setEnabled(false);
    btnCancelar.setEnabled(false);
    btnCalcular.setEnabled(false);
    eliminarTablaCuotas();
    
    //vacia los campos en ""
    txtIdProveedor.setText("");   
    txtImporte.setText("");
    txtCuotas.setText("");
    txtComprador.setText("");
    txtIdProveedor.setText("");
    txtSector.setText("");
    txtMotivoSNC.setText("");
    txtDescuento.setText("");
    txtDescDescuento.setText("");
    txtObsProveedor.setText("");
    txtObsComprador.setText("");
    txtCantCopias.setText("");
    jlbCuotas.setEnabled(false);
    }
    
   public void eliminarTablaCuotas(){
        DefaultTableModel tb = (DefaultTableModel) tblCuotasVisual.getModel();
        int a = tblCuotasVisual.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanDeDescuentoFijo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanDeDescuentoFijo().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnConsultasPlan;
    private javax.swing.JButton btnNuevoPlan;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcomComprador;
    private javax.swing.JComboBox<String> jcomMotivo;
    private javax.swing.JComboBox<String> jcomProveedor;
    private javax.swing.JComboBox<String> jcomSector;
    private javax.swing.JLabel jlbCantidadDeCopias;
    private javax.swing.JLabel jlbComprador;
    private javax.swing.JLabel jlbCuota;
    private javax.swing.JLabel jlbCuotas;
    private javax.swing.JLabel jlbDescuento;
    private javax.swing.JLabel jlbFechaDebito;
    private javax.swing.JLabel jlbImporte;
    private javax.swing.JLabel jlbMotivoSNC;
    private javax.swing.JLabel jlbObsComprador;
    private javax.swing.JLabel jlbObsProveedor;
    private javax.swing.JLabel jlbProveedor;
    private javax.swing.JLabel jlbSector;
    private javax.swing.JRadioButton rbIVA10;
    private javax.swing.JRadioButton rbIVA21;
    private javax.swing.JTable tblCuotasVisual;
    private javax.swing.JTextField txtCantCopias;
    private javax.swing.JTextField txtComprador;
    private javax.swing.JTextField txtCuotas;
    private javax.swing.JTextField txtDescDescuento;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtFechaDebito;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtImporte;
    private javax.swing.JTextField txtMotivoSNC;
    private javax.swing.JTextField txtObsComprador;
    private javax.swing.JTextField txtObsProveedor;
    private javax.swing.JTextField txtSector;
    // End of variables declaration//GEN-END:variables
}
